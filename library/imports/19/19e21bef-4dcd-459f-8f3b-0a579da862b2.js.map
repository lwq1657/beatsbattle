{"version":3,"sources":["../../../../assets/Script/assets/Script/Game.js"],"names":["cc","Class","extends","Component","properties","piecePrefab","default","type","Prefab","greenbg","Node","gameState","onLoad","pieceSFList","pieceID","pieceSet","sort","Math","random","y","x","newPiece","instantiate","isTurn","id","addChild","setPosition","p","on","EventType","TOUCH_END","event","touchPiece","target","loader","loadRes","SpriteFrame","err","spriteFrame","getComponent","Sprite","console","log","bind","pieceBattle","red","blue","self","abs","exchangePlayer","reSrartGame","gameOver","start"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        piecePrefab:{\n            default:null,\n            type:cc.Prefab,\n        },\n\n        greenbg:{\n            default:null,\n            type:cc.Node,\n        }, //背景节点\n\n        gameState:'red', //初始执棋方\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad :function() {\n\n        this.pieceSFList = ['redmouse','bluemouse','redcat','bluecat','reddog','bluedog','redwolf','bluewolf','redpanther','bluepanther','redtiger','bluetiger','redlion','bluelion','redjumbo','bluejumbo'];\n        //图片数组，存储斗兽棋子图片路径，resources文件下\n        this.pieceID = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\n        //棋子ID数组，后面讲打乱用于棋子的随机初始化\n        this.pieceSet();\n\n    },\n\n    pieceSet:function(){\n        //控制棋子摆放,背面棋子点击翻到正面，如果已经翻过就不处理响应\n       this.pieceID.sort(function(){ return 0.5 - Math.random() });//打乱棋子id顺序\n\n        for(var y = 0;y < 4;y++) {\n            for (var x = 0; x < 4; x++) {\n                //循环摆放棋子\n                var newPiece = cc.instantiate(this.piecePrefab);//复制piece预制资源\n                //newPiece.id = x + y*4;\n                newPiece.isTurn = false;\n                newPiece.id = this.pieceID[x + y * 4];\n                //console.log(newPiece.id);\n                this.greenbg.addChild(newPiece);\n                newPiece.setPosition(cc.p((x + 115) + 180 * x, y * 200 + (y + 281)));//根据棋盘和棋子大小计算使每个棋子节点位于指定位置\n\n                newPiece.on(cc.Node.EventType.TOUCH_END,function(event){\n\n                         var touchPiece = event.target;\n                        if(this.gameState === 'red' &  touchPiece.isTurn === false) {\n                            //轮到对应玩家，才处理点击\n                            // console.log(touchPiece.id );\n                            // console.log(touchPiece.isTurn);\n                            //console.log(this.pieceSFList[touchPiece.id]);//存储图标的数组\n                            cc.loader.loadRes(this.pieceSFList[touchPiece.id], cc.SpriteFrame, function (err, spriteFrame) {\n                                touchPiece.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n                                //棋子正面图片设置\n                                touchPiece.isTurn = true; //标志已经翻到正面\n                            });\n                            console.log(\"touchsuccess\" + touchPiece.id);\n                        }\n                   // this.exchangePlayer();//交换执棋方\n                }.bind(this));\n            }\n        }\n    },\n\n    pieceBattle:function(red,blue){\n        var self = this;\n        if(red.id > blue.id || red.id === 0 && blue.id ===15){\n            //将红棋移动至蓝棋位置，蓝棋消失\n            \n\n        }else if (Math.abs(red.id - blue.id) === 1){\n            //红棋蓝棋均消失\n        }else if(red.id === 14 && blue.id === 1 || red.id < blue.id){\n            //将蓝棋移动至红棋位置，红棋消失\n        }\n\n    },\n\n\n    exchangePlayer: function(){\n        //交换当前玩家顺序\n        if(this.gameState === 'red'){\n            this.gameState = 'blue';\n        }else{\n            this.gameState = 'red';\n        }\n    },\n\n    reSrartGame:function(){\n      this.pieceSet();\n      this.exchangePlayer(); //交换下对手顺序，输了的先下\n    },\n\n    gameOver : function(){\n\n    },\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}